name: 自动更新并保持签到脚本活跃

#这个脚本用于保持仓库活跃，防止actions因为仓库不活跃自动禁用。你可以不用管它

on:
  schedule:
    - cron: '0 16 * * *'  # 每天北京时间 0 点触发（UTC+8）
  workflow_dispatch:  # 支持手动触发

permissions:
  contents: write  # 允许写入仓库内容

jobs:
  sync-upstream:
    runs-on: ubuntu-latest

    steps:  
      - name: 检出仓库代码  
        uses: actions/checkout@v4  
        with:  
          fetch-depth: 0  # 获取完整提交历史，便于 rebase  

      - name: 设置 Git 配置  
        run: |  
          git config --global user.name "GitHub Actions"  
          git config --global user.email "actions@github.com"  
          git config core.autocrlf false  # 避免行结束符转换导致的虚假变化  

      - name: 添加上游仓库  
        run: |  
          if ! git remote | grep -q upstream; then  
            git remote add upstream https://github.com/zhangMonday/jlc-auto-check-in.git  
          fi  

      - name: 切换到 main 分支  
        run: git checkout main  

      - name: 检查是否有更新  
        id: check-update  
        run: |  
          git fetch upstream  
          UPDATE_COUNT=$(git rev-list --count main..upstream/main)  
          CHANGES=$(git diff --name-only -w main..upstream/main)  
          echo "Debug: Update count = $UPDATE_COUNT"  
          echo "Debug: Changed files (ignoring all whitespace) = '$CHANGES'"  
          if [ "$UPDATE_COUNT" -gt 0 ]; then  
            if git diff --quiet -w main..upstream/main; then  
              echo "Debug: Diff quiet (no substantive changes, ignoring all whitespace), setting has_update=false"  
              echo "has_update=false" >> $GITHUB_OUTPUT  
              echo "changes=" >> $GITHUB_OUTPUT  
            else  
              echo "Debug: Diff not quiet (substantive file changes detected), setting has_update=true"  
              echo "has_update=true" >> $GITHUB_OUTPUT  
              echo "changes=$CHANGES" >> $GITHUB_OUTPUT  
            fi  
          else  
            echo "Debug: No new commits, setting has_update=false"  
            echo "has_update=false" >> $GITHUB_OUTPUT  
            echo "changes=" >> $GITHUB_OUTPUT  
          fi  

      - name: 检查上游更新是否包含 workflow 文件  
        if: steps.check-update.outputs.has_update == 'true'  
        id: check-workflow-update  
        run: |  
          if echo "${{ steps.check-update.outputs.changes }}" | grep -q '\.github/workflows/'; then  
            echo "has_workflow_update=true" >> $GITHUB_OUTPUT  
          else  
            echo "has_workflow_update=false" >> $GITHUB_OUTPUT  
          fi  

      - name: 拉取上游代码并同步（如果有更新）  
        if: steps.check-update.outputs.has_update == 'true' && steps.check-workflow-update.outputs.has_workflow_update == 'false'  
        run: |  
          set -e  
          git fetch upstream  
          if git rebase upstream/main; then  
            git push origin main --force-with-lease  
            echo "✅ 已成功更新最新代码"  
          else  
            git rebase --abort  
            echo "⚠️ 更新异常，执行空提交保持活跃"  
            git commit --allow-empty -m "保持仓库活跃（更新失败回退）"  
            git push origin main  
          fi  

      - name: 提示手动更新（如果上游更新包含 workflow 文件）  
        if: steps.check-update.outputs.has_update == 'true' && steps.check-workflow-update.outputs.has_workflow_update == 'true'  
        run: |  
          echo "⚠️ 上游更新包含 workflow 脚本内容，无法自动更新。请在你 fork 的仓库中找到 'Sync fork'按钮，手动点击更新。"  
          # 直接空提交保持活跃，无需 pull（Actions 已 checkout 最新）  
          git commit --allow-empty -m "空修改，检测到有更新，请手动更新一下"  
          git push origin main  
          echo "🟢 已提交空修改保持仓库活跃"  

      - name: 提交空修改（如果无更新）  
        if: steps.check-update.outputs.has_update == 'false'  
        run: |  
          # 无需 pull（Actions 已 checkout 最新），直接空提交  
          git commit --allow-empty -m "空修改，用于保持仓库活跃，防止自动签到失效"  
          git push origin main  
          echo "🟢 无更新，已提交空修改保持仓库活跃"
